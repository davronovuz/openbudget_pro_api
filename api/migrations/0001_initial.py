# Generated by Django 5.2.5 on 2025-08-16 19:38

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.BigIntegerField()),
                ('action', models.CharField(max_length=128)),
                ('payload_json', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'adminlogs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chat_id', models.BigIntegerField()),
                ('type', models.CharField(choices=[('PAYOUTS', 'PAYOUTS'), ('ALERTS', 'ALERTS')], max_length=16)),
                ('title', models.CharField(blank=True, max_length=128, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'channels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ExportJob',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.BigIntegerField(null=True)),
                ('kind', models.CharField(choices=[('USERS', 'USERS'), ('VOTES', 'VOTES'), ('WITHDRAWALS', 'WITHDRAWALS'), ('PROJECTS', 'PROJECTS')], max_length=32)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('RUNNING', 'RUNNING'), ('DONE', 'DONE'), ('FAILED', 'FAILED')], default='PENDING', max_length=16)),
                ('params', models.JSONField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=1024, null=True)),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'exportjobs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ob_project_id', models.CharField(max_length=64)),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=1024)),
                ('region', models.CharField(blank=True, max_length=128, null=True)),
                ('district', models.CharField(blank=True, max_length=128, null=True)),
                ('category', models.CharField(blank=True, max_length=128, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('reward_sum', models.IntegerField(default=0)),
                ('target_votes', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'projects',
                'managed': True,
                'indexes': [models.Index(fields=['is_active'], name='ix_projects_active'), models.Index(fields=['category'], name='ix_projects_category')],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=64, unique=True)),
                ('default_reward_sum', models.IntegerField(default=0)),
                ('allow_multiple_active_projects', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('active_project', models.ForeignKey(db_column='active_project_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.project')),
            ],
            options={
                'db_table': 'settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=128, null=True)),
                ('full_name', models.CharField(max_length=128)),
                ('active', models.BooleanField(default=True)),
                ('language', models.CharField(choices=[('uz', 'Uzbek'), ('ru', 'Russian'), ('en', 'English')], default='uz', max_length=10)),
                ('balance_sum', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
                'indexes': [models.Index(fields=['active'], name='ix_users_active')],
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bonus_sum', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('QUALIFIED', 'QUALIFIED'), ('PAID', 'PAID'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=16)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('referred_user', models.ForeignKey(db_column='referred_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='referrals_received', to='api.user')),
                ('referrer_user', models.ForeignKey(db_column='referrer_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='referrals_made', to='api.user')),
            ],
            options={
                'db_table': 'referrals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_phone_id', models.IntegerField(blank=True, null=True)),
                ('phone_snapshot', models.CharField(max_length=24)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('OTP_REQUIRED', 'OTP_REQUIRED'), ('PROCESSING', 'PROCESSING'), ('SUCCESS', 'SUCCESS'), ('FAILED', 'FAILED')], default='PENDING', max_length=24)),
                ('attempt_count', models.IntegerField(default=0)),
                ('selenium_session_id', models.CharField(blank=True, max_length=128, null=True)),
                ('ob_vote_id', models.CharField(blank=True, max_length=64, null=True)),
                ('proof_screenshot_path', models.CharField(blank=True, max_length=1024, null=True)),
                ('error_message', models.CharField(blank=True, max_length=512, null=True)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('project', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='api.project')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='api.user')),
            ],
            options={
                'db_table': 'votes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SeleniumJob',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('QUEUED', 'QUEUED'), ('RUNNING', 'RUNNING'), ('DONE', 'DONE'), ('FAILED', 'FAILED')], default='QUEUED', max_length=16)),
                ('node', models.CharField(blank=True, max_length=64, null=True)),
                ('timings', models.JSONField(blank=True, null=True)),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote', models.ForeignKey(db_column='vote_id', on_delete=django.db.models.deletion.CASCADE, related_name='selenium_jobs', to='api.vote')),
            ],
            options={
                'db_table': 'seleniumjobs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OtpAttempt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code_entered', models.CharField(max_length=16)),
                ('result', models.CharField(choices=[('OK', 'OK'), ('WRONG', 'WRONG'), ('EXPIRED', 'EXPIRED'), ('ERROR', 'ERROR')], max_length=16)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote', models.ForeignKey(db_column='vote_id', on_delete=django.db.models.deletion.CASCADE, related_name='otp_attempts', to='api.vote')),
            ],
            options={
                'db_table': 'otpattempts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount_sum', models.IntegerField()),
                ('method', models.CharField(choices=[('CARD', 'CARD'), ('CLICK', 'CLICK'), ('PAYME', 'PAYME'), ('OTHER', 'OTHER')], max_length=16)),
                ('destination_masked', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('PAID', 'PAID'), ('REJECTED', 'REJECTED'), ('CANCELED', 'CANCELED')], default='PENDING', max_length=16)),
                ('admin_id', models.BigIntegerField(blank=True, null=True)),
                ('admin_note', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to='api.user')),
            ],
            options={
                'db_table': 'withdrawals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('REWARD', 'REWARD'), ('REFERRAL', 'REFERRAL'), ('WITHDRAWAL', 'WITHDRAWAL'), ('ADJUSTMENT', 'ADJUSTMENT'), ('PENALTY', 'PENALTY')], max_length=16)),
                ('amount_sum', models.IntegerField()),
                ('ref_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='api.user')),
            ],
            options={
                'db_table': 'transactions',
                'managed': True,
                'indexes': [models.Index(fields=['user', 'created_at'], name='ix_txn_user_created')],
            },
        ),
        migrations.CreateModel(
            name='UserPhone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone_e164', models.CharField(max_length=24)),
                ('phone_snapshot', models.CharField(max_length=24)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='api.user')),
            ],
            options={
                'db_table': 'userphones',
                'managed': True,
                'indexes': [models.Index(fields=['phone_snapshot'], name='ix_userphone_snapshot')],
                'constraints': [models.UniqueConstraint(fields=('user', 'phone_e164'), name='uq_user_phone_per_user')],
            },
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['project', 'status'], name='ix_votes_project_status'),
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['user'], name='ix_votes_user'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('project', 'phone_snapshot'), name='uq_vote_phone_per_project'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('project', 'user_phone_id'), name='uq_vote_userphone_per_project'),
        ),
        migrations.AddIndex(
            model_name='withdrawal',
            index=models.Index(fields=['status'], name='ix_withdraw_status'),
        ),
    ]
